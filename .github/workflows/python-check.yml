name: Run Python linters and tests
on:
  pull_request:
    paths:
      - '**/*.py'
      - 'poetry.lock'
      - 'pyproject.toml'
    branches:
      - master
      - dev
      - release/*

jobs:
  lint:
    name: Run Python linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        poetry-version: ["1.8.3"]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install Poetry ${{matrix.poetry-version}}"
        run: pipx install poetry==${{matrix.poetry-version}}
      - name: "Setup Python ${{matrix.python-version}}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: 'poetry'
      - name: "Install dependencies"
        run: make install
      - name: "Run flake8"
        run: make flake
      - name: "Run mypy"
        run: make mypy
      - name: "Run black lint"
        run: make black-lint
      - name: "Run Poetry check"
        run: make poetry-check
  test:
    name: Run Python tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        poetry-version: ["1.8.3"]
        browser: ["chromium", "firefox", "webkit"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install Poetry ${{matrix.poetry-version}}"
        run: pipx install poetry==${{matrix.poetry-version}}
      - name: "Setup Python ${{matrix.python-versions}}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: "poetry"
      - name: Install dependencies
        run: make install
      - name: "Install browser dependencies"
        run: make browser-install browser=${{matrix.browser}}
      - name: "Run pytest"
        run: make test browser=${{matrix.browser}}
